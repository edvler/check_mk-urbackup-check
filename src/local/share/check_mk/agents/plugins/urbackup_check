#!/usr/bin/python3

# Author: Matthias Maderer
# E-Mail: edvler@edvler-blog.de
# URL: https://github.com/edvler/check_mk_urbackup-check
# License: GPLv2

import sys
try:
    import urbackup_api
except ImportError:
    sys.exit(0)

import configparser
import time
import os

#convert linux-time to timestamp
def unixTimeStampToDate(unix_stamp):
    return time.localtime(unix_stamp)

#read login config
conf_path = None
try:
   conf_path = os.environ['MK_CONFDIR']
except KeyError:
   conf_path = '/etc/check_mk'

config = configparser.ConfigParser()
config.read(conf_path + '/urbackup-check.ini')

url = config.get('server', 'url')
user = config.get('server', 'user')
password = config.get('server', 'password')

#connect string
server = urbackup_api.urbackup_server(url, user, password)

#query client infos
clients = server.get_status()

arrayreturn = []

#generate output for check_mk
print ('<<<urbackup_check>>>')
for client in clients:

    #Check if client is rejected (registered on another Urbackup server)
    if "rejected" in client and client["rejected"] == True:
        continue

    #get more informations for backuptype filebackup and imagebackup
#    clientinfo = server.get_client_status(client['name'])
    filebackups = server.get_clientbackups(client['id'])
    imagebackups = server.get_clientimagebackups(client['id'])

    #Filebackup abfragen
    last_filebackup = 0
    for backup in filebackups:
        if last_filebackup < backup['backuptime']:
            last_filebackup = backup['backuptime']

    if last_filebackup == 0:
        filebackup_conv='-'
    else:
        filebackup_conv=time.strftime('%Y-%m-%d_%H:%M%z', unixTimeStampToDate(last_filebackup))

    #Append filebackup information to array
    arrayreturn.append({
           "name": client["name"],
           "type": "filebackup",
           "letter": "filebackup",
           "timestamp": filebackup_conv,
           "urbackupstatus": client["file_ok"],
           })

    #Imagebackup query
    last_imagebackup = {}
    for backup in imagebackups:
        if backup['letter'] not in last_imagebackup:
            last_imagebackup[backup['letter']] = 0

        if last_imagebackup[backup['letter']] < backup['backuptime']:
            last_imagebackup[backup['letter']] = backup['backuptime']

    #Append Imagebackup information to array
    if len(last_imagebackup) > 0:
        for letter in last_imagebackup:
            arrayreturn.append({
                "name": client["name"],
                "type": "imagebackup",
                "letter": letter,
                "timestamp": time.strftime('%Y-%m-%d_%H:%M%z', unixTimeStampToDate(last_imagebackup[letter])),
                "urbackupstatus": client["image_ok"],
                })
    else:
            arrayreturn.append({
                "name": client["name"],
                "type": "imagebackup",
                "letter": "No Imagebackup configured",
                "timestamp": "0",
                "urbackupstatus": "False"
                })



#Output all services for the urbackup server (all hosts are displayes as services within the urbackup server)
for entry in arrayreturn:
    print ("{name};;;;;{type};;;;;{letter};;;;;{timestamp};;;;;{urbackupstatus}".format(
        name=entry["name"],
        type=entry["type"],
        letter=entry["letter"],
        timestamp=entry["timestamp"],
        urbackupstatus=entry["urbackupstatus"]
        ))  

#Piggyback https://docs.checkmk.com/latest/en/piggyback.html
#For each host services are displayed within the backuped client itself in check_mk
#If the clientname does not match. See Setup -> Agent access rules -> Hostname translation for piggybacked hosts (see link above)
name=""
for entry in arrayreturn:
    #Print Header if hostname changes
    if name != entry["name"]:
        name = entry["name"]
        print("<<<<" + entry["name"] + ">>>>")
        print ('<<<urbackup_check>>>')

    print ("{name};;;;;{type};;;;;{letter};;;;;{timestamp};;;;;{urbackupstatus}".format(
          name=entry["name"],
          type=entry["type"],
          letter=entry["letter"],
          timestamp=entry["timestamp"],
          urbackupstatus=entry["urbackupstatus"]
        ))  

